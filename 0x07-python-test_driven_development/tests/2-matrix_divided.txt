"""
This test module consist a single function called
``matrix_divided()``

Numbers
=======

``matrix_divided()`` returns a new matrix which is created by
dividing every single element of the given matrix by the given divisor

..
..
	>>> matrix_divided = __import__("2-matrix_divided").matrix_divided
	>>> m = [[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided(m, 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

It also works with floating-point values.

..
..
	>>> m = [[3.5, 2.3, 9.0, 12.23], [4.1, 2.1, 11.23, 78.21]]
	>>> matrix_divided(m, 4)
	[[0.88, 0.57, 2.25, 3.06], [1.02, 0.53, 2.81, 19.55]]

Division by infinity
..
..
	>>> m = [[3, 2, 9, 1], [4, 2, 11, 78]]
	>>> matrix_divided(m, float('inf'))
	[[0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0]]

Errors
===========

If the matrix is not a list of int or float it will raise an error

..
..
	>>> m = [[23, 90, 77,12], [12.12, 'abc', 'sil', 0]]
	>>> matrix_divided(m, 4)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

If the divisor is zero it will raise ZeroDivisionError

..
..
	>>> m = [[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided(m, 0)
	Traceback (most recent call last):
	ZeroDivisionError: division by zero

Row of matrix different

..
..
	>>> m = [[3.5, 2.3, 9.0, 12.23], [4.1, 2.1, 11.23]]
	>>> matrix_divided(m, 3)
	Traceback (most recent call last):
	TypeError: Each row of the matrix must have the same size

Empy list
=========

..
..
	>>> m = []
	>>> matrix_divided(m, 3)
	[]
